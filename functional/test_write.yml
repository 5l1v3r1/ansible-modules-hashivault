---
- hosts: localhost
  gather_facts: no
  tasks:
    - hashivault_delete:
        secret: 'giant'
    - name: Write verify it succeeds
      hashivault_write:
        secret: 'giant'
        data:
            foo: 'foe'
            fie: 'fum'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == True" }
    - assert: { that: "'{{vault_write.msg}}' == 'Secret secret/giant written'" }
    - assert: { that: "{{vault_write.rc}} == 0" }

    - name: Write again no update verify changed
      hashivault_write:
        secret: 'giant'
        data:
          foo: 'foe'
          fie: 'fum'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == True" }
    - assert: { that: "'{{vault_write.msg}}' == 'Secret secret/giant written'" }
    - assert: { that: "{{vault_write.rc}} == 0" }

    - name: Update again and verify no change
      hashivault_write:
        update: True
        secret: 'giant'
        data:
          foo: 'foe'
          fie: 'fum'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == False" }
    - assert: { that: "{{vault_write.rc}} == 0" }

    - name: Update new value and detect change
      hashivault_write:
        update: True
        secret: 'giant'
        data:
          foo: 'new'
          fie: 'fum'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == True" }
    - assert: { that: "'{{vault_write.msg}}' == 'Secret secret/giant written'" }
    - assert: { that: "{{vault_write.rc}} == 0" }

    - hashivault_delete:
        secret: stalks/bean
    - name: Update a brand new secret in folder
      hashivault_write:
        update: True
        secret: stalks/bean
        data:
          height: tall
      register: vault_write
    - assert: { that: "{{vault_write.changed}} == True" }
    - assert: { that: "'{{vault_write.msg}}' == 'Secret secret/stalks/bean written'" }
    - assert: { that: "{{vault_write.rc}} == 0" }
