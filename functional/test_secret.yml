---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: List secret stores
      hashivault_secret_list:
      register: 'vault_secret_list'

    - name: Write new value to secret store
      hashivault_write:
        secret: 'name'
        data:
            value: 'one'
      register: 'vault_write'
    - assert:
        that:
          - "{{vault_write.changed}} == True"
          - "'{{vault_write.msg}}' == 'Secret secret/name written'"

    - name: Overwrite value to secret store
      hashivault_write:
        secret: 'name'
        data:
            value: 'two'
      register: 'vault_write'
    - assert:
        that:
          - "{{vault_write.changed}} == True"
          - "'{{vault_write.msg}}' == 'Secret secret/name written'"

    - name: Overwrite same value to secret store
      hashivault_write:
        secret: 'name'
        data:
            value: 'two'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == True" }

    - name: Update value to secret store
      hashivault_write:
        secret: 'name'
        update: True
        data:
            value: 'three'
      register: 'vault_write'
    - assert:
        that:
          - "{{vault_write.changed}} == True"
          - "'{{vault_write.msg}}' == 'Secret secret/name written'"

    - name: Update same value to secret store
      hashivault_write:
        secret: 'name'
        update: True
        data:
            value: 'three'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == False" }

    - name: Update some other value to secret store
      hashivault_write:
        secret: 'name'
        update: True
        data:
            other_value: 'four'
      register: 'vault_write'
    - assert: { that: "{{vault_write.changed}} == True" }

    - name: Read the secret value
      hashivault_read:
        secret: 'name'
        key: 'value'
      register: 'vault_read'
    - assert: { that: "'{{vault_read.value}}' == 'three'" }

    - name: Read other secret value
      hashivault_read:
        secret: 'name'
        key: 'other_value'
      register: 'vault_read'
    - assert: { that: "'{{vault_read.value}}' == 'four'" }

    - set_fact:
        looky_secret: "{{lookup('hashivault', 'name', 'value')}}"
    - assert: { that: "'{{looky_secret}}' == 'three'" }

    - name: Delete a secret
      hashivault_delete:
        secret: 'name'
      register: 'vault_secret_delete'
    - assert: { that: "{{vault_secret_delete.changed}} == True" }
    - assert: { that: "{{vault_secret_delete.rc}} == 0" }
    - assert: { that: "'{{vault_secret_delete.msg}}' == 'Secret secret/name deleted'" }

    - name: Make sure secret value is gone
      hashivault_read:
        secret: 'name'
      register: 'vault_read'
      failed_when: False
    - assert: { that: "{{vault_read.changed}} == False" }
    - assert: { that: "'{{vault_read.msg}}' == 'Secret name is not in vault'" }
