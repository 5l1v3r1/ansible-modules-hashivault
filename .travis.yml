stages:
- test
language: python
jobs:
  include:
  - stage: test
    name: Tests Python 2.7
    sudo: required
    python:
    - '2.7'
    services:
    - docker
    before_install:
    - docker pull vault:latest
    - docker ps -a
    install: pip install tox-travis
    script: tox
  - stage: test
    name: Tests Python 3.6
    sudo: required
    python:
    - '3.6'
    services:
    - docker
    before_install:
    - docker pull vault:latest
    - docker ps -a
    install: pip install tox-travis
    script: tox
  - stage: test
    name: Generating docs
    python: '3.6'
    deploy:
      local-dir: ansible-repo/ansible/docs/docsite/_build/html
      provider: pages
      skip-cleanup: true
      github-token: "$GITHUB_TOKEN"
      keep-history: true
      on:
        tags: true
    env:
    - PLUGINS=''
    install:
    - mkdir ansible-repo && cd ansible-repo
    - git clone https://github.com/ansible/ansible.git && cd ansible &&  git checkout
      v2.7.6 && cd ..
    - pip install sphinx sphinx_rtd_theme
    - pip install -r ansible/requirements.txt
    - rm -rf ansible/lib/ansible/modules/ && mkdir -p ansible/lib/ansible/modules/hashivault
    - cp -r ../ansible/modules/hashivault/hashivault*.py ansible/lib/ansible/modules/hashivault/
    - ls ansible/lib/ansible/modules/hashivault
    - cd ansible/docs/docsite/
    script:
    - export MODULES=$(ls -m --hide='_*' ../../lib/ansible/modules/hashivault/ | tr
      -d '[:space:]'  | sed 's/.py//g')
    - make webdocs .
    - touch _build/html/.nojekyll
    on:
      tags: true
env:
  matrix:
    secure: oCC/bugXphWhcjNNFEGp5Cq7VrSrKiP7Nfw8BL8rNUia1RXD1DxE5jdddLdfWapFO9BRViOInyST9clN4Q67PmJAiTkeOcF0GbkyWzrwA7Tu9g0D7YjlgHo/euqL33hqf0iRst9gW4If0Gq9sa20+US6yNOX9OGa4LHGBjB55S0ayckCzRrOJg+eZNTe1M6YibQuvZXqBPJN3Juj3q37S4QGrIz275RrmdKdezZFs+JHt8W+HRm88lFTOMINSuc3tuoJjnAC0c+jJLiAC2HQ6AKgFS8DNqr8G8gMwhqtvAiSegQrgxot8bFdKmE0sQ61aKKzMF/GOGDPFPPeUlk33rXFyIsFEmEzhqtoGPobyZX/KRlJu55Aqgr/fHgoEAGOkb2wTsLPX9tI2GIuZ/oaV2rxgYsZhIMXG6i4+yXM4U6OBgHfdJPHwZoCpZRX6kixc3/aFny3E9jrVtDVZGwoJHq1e3O0pL0sYB5CHO7icLJrf4mOjI0hoPV9byd9JrJi5ROFwRfXeuMFYYHe/yhcclnYI/Cg91wrzLq+2877+vYWvBFoPEeKvCsLMSz3ko7QLv7s8dAhgV4TXrYNuayLtFcvij4H1s0DQcCTmFIf/LHp3Jnv2YsoNtcSYDLxGrg8w/jq4pgObyw0VXlznj2X6pMvYhufW6ObTUH4aoEQ3OA=
